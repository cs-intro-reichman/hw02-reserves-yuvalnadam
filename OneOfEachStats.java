import java.util.Random;
/**
 *  Computes some statistics about families in which the parents decide 
 *  to have children until they have at least one child of each gender.
 *  The program expects to get two command-line arguments: an int value
 * 	that determines how many families to simulate, and an int value
 *  that serves as the seed of the random numbers generated by the program.
 *  Example usage: % java OneOfEachStats 1000 1
 */
public class OneOfEachStats {
	public static void main (String[] args) {
		
		// Gets the two command-line arguments
		int T = Integer.parseInt(args[0]);
		int seed = Integer.parseInt(args[1]);
		// Initailizes a random numbers generator with the given seed value
        Random generator = new Random(seed);  
		
		int families = Integer.parseInt(args[0]);
		int sum = 0;
		int sum2child = 0;
		int sum3child = 0;
		int sum4child = 0;

		for (int i = 0; i < families; i++) {

		int sumforchild = 0; 

		boolean girl = false;
		boolean boy = false;

		while( !girl || !boy)
		 {
		 	 double rand = enerator.nextDouble();
		 	if (rand == 1)
		 	{
		 		boy = true;
		 	}
		 	if ( rand == 0)
		 	{
		 		girl = true; 		 		
		 	}
		 	sumforchild ++; 

		}

		if (sumforchild == 2)
		{
			sum2child += 1;
		}

		if(sumforchild == 3)
		{
			sum3child += 1;
		}
		if(sumforchild == 4 || sumforchild > 4)
		{
			sum4child += 1; 
		}

		sum += sumforchild;

		}

		double avg = (double)sum / families; 
		System.out.println("Average: " + avg + " children to get at least one of each gender.");
		System.out.println("Number of families with 2 children: " + sum2child);
		System.out.println("Number of families with 3 children: " + sum3child);
		System.out.println("Number of families with 4 children: " + sum4child);

		int mostcommon = Math.max(Math.max(sum2child, sum3child), sum4child);
		
		System.out.println("The most common number of children is " + mostcommon + ".");

		//// In the previous version of this program, you used a statement like:
		//// double rnd = Math.random();
		//// Where "rnd" is the variable that stores the generated random value.
		//// In this version of the program, replace this statement with:
		//// double rnd = generator.nextDouble();
		//// This statement will generate a random value in the range [0,1),
		//// just like you had in the previous version, except that the 
		//// randomization will be based on the given seed.
		//// This is the only change that you have to do in the program.
		    
	}
}
